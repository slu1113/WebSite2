#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     這段程式碼是由工具產生的。
//     執行階段版本:4.0.30319.18444
//
//     對這個檔案所做的變更可能會造成錯誤的行為，而且如果重新產生程式碼，
//     變更將會遺失。
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Linq;
using System.Data.Linq.Mapping;
using System.Linq;
using System.Linq.Expressions;
using System.Reflection;



[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Hardware")]
public partial class hwDataClassesDataContext : System.Data.Linq.DataContext
{
	
	private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
	
  #region 擴充性方法定義
  partial void OnCreated();
  partial void InsertDevice(Device instance);
  partial void UpdateDevice(Device instance);
  partial void DeleteDevice(Device instance);
  partial void InsertSupplier(Supplier instance);
  partial void UpdateSupplier(Supplier instance);
  partial void DeleteSupplier(Supplier instance);
  partial void InsertManufacturer(Manufacturer instance);
  partial void UpdateManufacturer(Manufacturer instance);
  partial void DeleteManufacturer(Manufacturer instance);
  partial void InsertProduct(Product instance);
  partial void UpdateProduct(Product instance);
  partial void DeleteProduct(Product instance);
  #endregion
	
	public hwDataClassesDataContext() : 
			base(global::System.Configuration.ConfigurationManager.ConnectionStrings["HardwareConnectionString"].ConnectionString, mappingSource)
	{
		OnCreated();
	}
	
	public hwDataClassesDataContext(string connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public hwDataClassesDataContext(System.Data.IDbConnection connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public hwDataClassesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public hwDataClassesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public System.Data.Linq.Table<Device> Device
	{
		get
		{
			return this.GetTable<Device>();
		}
	}
	
	public System.Data.Linq.Table<Supplier> Supplier
	{
		get
		{
			return this.GetTable<Supplier>();
		}
	}
	
	public System.Data.Linq.Table<Manufacturer> Manufacturer
	{
		get
		{
			return this.GetTable<Manufacturer>();
		}
	}
	
	public System.Data.Linq.Table<Product> Product
	{
		get
		{
			return this.GetTable<Product>();
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Device")]
public partial class Device : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _DeviceUid;
	
	private System.Nullable<int> _ProductUid;
	
	private string _Classification;
	
	private string _SequenceNo;
	
	private string _StorageUnits;
	
	private string _Custodian;
	
	private System.Nullable<int> _EndUser;
	
	private string _StoragePos;
	
	private string _StoragePosNo;
	
	private string _Status;
	
	private string _InventoryResult;
	
	private System.Nullable<System.DateTime> _InventoryDate;
	
	private System.Nullable<int> _UpdateUser;
	
	private System.Nullable<System.DateTime> _UpdateDate;
	
	private string _Memo;
	
	private EntityRef<Product> _Product;
	
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDeviceUidChanging(int value);
    partial void OnDeviceUidChanged();
    partial void OnProductUidChanging(System.Nullable<int> value);
    partial void OnProductUidChanged();
    partial void OnClassificationChanging(string value);
    partial void OnClassificationChanged();
    partial void OnSequenceNoChanging(string value);
    partial void OnSequenceNoChanged();
    partial void OnStorageUnitsChanging(string value);
    partial void OnStorageUnitsChanged();
    partial void OnCustodianChanging(string value);
    partial void OnCustodianChanged();
    partial void OnEndUserChanging(System.Nullable<int> value);
    partial void OnEndUserChanged();
    partial void OnStoragePosChanging(string value);
    partial void OnStoragePosChanged();
    partial void OnStoragePosNoChanging(string value);
    partial void OnStoragePosNoChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    partial void OnInventoryResultChanging(string value);
    partial void OnInventoryResultChanged();
    partial void OnInventoryDateChanging(System.Nullable<System.DateTime> value);
    partial void OnInventoryDateChanged();
    partial void OnUpdateUserChanging(System.Nullable<int> value);
    partial void OnUpdateUserChanged();
    partial void OnUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdateDateChanged();
    partial void OnMemoChanging(string value);
    partial void OnMemoChanged();
    #endregion
	
	public Device()
	{
		this._Product = default(EntityRef<Product>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeviceUid", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int DeviceUid
	{
		get
		{
			return this._DeviceUid;
		}
		set
		{
			if ((this._DeviceUid != value))
			{
				this.OnDeviceUidChanging(value);
				this.SendPropertyChanging();
				this._DeviceUid = value;
				this.SendPropertyChanged("DeviceUid");
				this.OnDeviceUidChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductUid", DbType="Int")]
	public System.Nullable<int> ProductUid
	{
		get
		{
			return this._ProductUid;
		}
		set
		{
			if ((this._ProductUid != value))
			{
				if (this._Product.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnProductUidChanging(value);
				this.SendPropertyChanging();
				this._ProductUid = value;
				this.SendPropertyChanged("ProductUid");
				this.OnProductUidChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Classification", DbType="NChar(10)")]
	public string Classification
	{
		get
		{
			return this._Classification;
		}
		set
		{
			if ((this._Classification != value))
			{
				this.OnClassificationChanging(value);
				this.SendPropertyChanging();
				this._Classification = value;
				this.SendPropertyChanged("Classification");
				this.OnClassificationChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SequenceNo", DbType="NChar(10)")]
	public string SequenceNo
	{
		get
		{
			return this._SequenceNo;
		}
		set
		{
			if ((this._SequenceNo != value))
			{
				this.OnSequenceNoChanging(value);
				this.SendPropertyChanging();
				this._SequenceNo = value;
				this.SendPropertyChanged("SequenceNo");
				this.OnSequenceNoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StorageUnits", DbType="NChar(2)")]
	public string StorageUnits
	{
		get
		{
			return this._StorageUnits;
		}
		set
		{
			if ((this._StorageUnits != value))
			{
				this.OnStorageUnitsChanging(value);
				this.SendPropertyChanging();
				this._StorageUnits = value;
				this.SendPropertyChanged("StorageUnits");
				this.OnStorageUnitsChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Custodian", DbType="NChar(30)")]
	public string Custodian
	{
		get
		{
			return this._Custodian;
		}
		set
		{
			if ((this._Custodian != value))
			{
				this.OnCustodianChanging(value);
				this.SendPropertyChanging();
				this._Custodian = value;
				this.SendPropertyChanged("Custodian");
				this.OnCustodianChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndUser", DbType="Int")]
	public System.Nullable<int> EndUser
	{
		get
		{
			return this._EndUser;
		}
		set
		{
			if ((this._EndUser != value))
			{
				this.OnEndUserChanging(value);
				this.SendPropertyChanging();
				this._EndUser = value;
				this.SendPropertyChanged("EndUser");
				this.OnEndUserChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StoragePos", DbType="NVarChar(20)")]
	public string StoragePos
	{
		get
		{
			return this._StoragePos;
		}
		set
		{
			if ((this._StoragePos != value))
			{
				this.OnStoragePosChanging(value);
				this.SendPropertyChanging();
				this._StoragePos = value;
				this.SendPropertyChanged("StoragePos");
				this.OnStoragePosChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StoragePosNo", DbType="NChar(10)")]
	public string StoragePosNo
	{
		get
		{
			return this._StoragePosNo;
		}
		set
		{
			if ((this._StoragePosNo != value))
			{
				this.OnStoragePosNoChanging(value);
				this.SendPropertyChanging();
				this._StoragePosNo = value;
				this.SendPropertyChanged("StoragePosNo");
				this.OnStoragePosNoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="NChar(2)")]
	public string Status
	{
		get
		{
			return this._Status;
		}
		set
		{
			if ((this._Status != value))
			{
				this.OnStatusChanging(value);
				this.SendPropertyChanging();
				this._Status = value;
				this.SendPropertyChanged("Status");
				this.OnStatusChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InventoryResult", DbType="NChar(2)")]
	public string InventoryResult
	{
		get
		{
			return this._InventoryResult;
		}
		set
		{
			if ((this._InventoryResult != value))
			{
				this.OnInventoryResultChanging(value);
				this.SendPropertyChanging();
				this._InventoryResult = value;
				this.SendPropertyChanged("InventoryResult");
				this.OnInventoryResultChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InventoryDate", DbType="SmallDateTime")]
	public System.Nullable<System.DateTime> InventoryDate
	{
		get
		{
			return this._InventoryDate;
		}
		set
		{
			if ((this._InventoryDate != value))
			{
				this.OnInventoryDateChanging(value);
				this.SendPropertyChanging();
				this._InventoryDate = value;
				this.SendPropertyChanged("InventoryDate");
				this.OnInventoryDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateUser", DbType="Int")]
	public System.Nullable<int> UpdateUser
	{
		get
		{
			return this._UpdateUser;
		}
		set
		{
			if ((this._UpdateUser != value))
			{
				this.OnUpdateUserChanging(value);
				this.SendPropertyChanging();
				this._UpdateUser = value;
				this.SendPropertyChanged("UpdateUser");
				this.OnUpdateUserChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="SmallDateTime")]
	public System.Nullable<System.DateTime> UpdateDate
	{
		get
		{
			return this._UpdateDate;
		}
		set
		{
			if ((this._UpdateDate != value))
			{
				this.OnUpdateDateChanging(value);
				this.SendPropertyChanging();
				this._UpdateDate = value;
				this.SendPropertyChanged("UpdateDate");
				this.OnUpdateDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Memo", DbType="NText", UpdateCheck=UpdateCheck.Never)]
	public string Memo
	{
		get
		{
			return this._Memo;
		}
		set
		{
			if ((this._Memo != value))
			{
				this.OnMemoChanging(value);
				this.SendPropertyChanging();
				this._Memo = value;
				this.SendPropertyChanged("Memo");
				this.OnMemoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_Device", Storage="_Product", ThisKey="ProductUid", OtherKey="ProductUid", IsForeignKey=true)]
	public Product Product
	{
		get
		{
			return this._Product.Entity;
		}
		set
		{
			Product previousValue = this._Product.Entity;
			if (((previousValue != value) 
						|| (this._Product.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Product.Entity = null;
					previousValue.Device.Remove(this);
				}
				this._Product.Entity = value;
				if ((value != null))
				{
					value.Device.Add(this);
					this._ProductUid = value.ProductUid;
				}
				else
				{
					this._ProductUid = default(Nullable<int>);
				}
				this.SendPropertyChanged("Product");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Supplier")]
public partial class Supplier : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _SupplierUid;
	
	private string _Name;
	
	private string _Contact;
	
	private string _ComTel;
	
	private string _Mobile;
	
	private string _Address;
	
	private string _WebUrl;
	
	private EntitySet<Product> _Product;
	
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSupplierUidChanging(int value);
    partial void OnSupplierUidChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnContactChanging(string value);
    partial void OnContactChanged();
    partial void OnComTelChanging(string value);
    partial void OnComTelChanged();
    partial void OnMobileChanging(string value);
    partial void OnMobileChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnWebUrlChanging(string value);
    partial void OnWebUrlChanged();
    #endregion
	
	public Supplier()
	{
		this._Product = new EntitySet<Product>(new Action<Product>(this.attach_Product), new Action<Product>(this.detach_Product));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierUid", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int SupplierUid
	{
		get
		{
			return this._SupplierUid;
		}
		set
		{
			if ((this._SupplierUid != value))
			{
				this.OnSupplierUidChanging(value);
				this.SendPropertyChanging();
				this._SupplierUid = value;
				this.SendPropertyChanged("SupplierUid");
				this.OnSupplierUidChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50)")]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this.OnNameChanging(value);
				this.SendPropertyChanging();
				this._Name = value;
				this.SendPropertyChanged("Name");
				this.OnNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Contact", DbType="NVarChar(10)")]
	public string Contact
	{
		get
		{
			return this._Contact;
		}
		set
		{
			if ((this._Contact != value))
			{
				this.OnContactChanging(value);
				this.SendPropertyChanging();
				this._Contact = value;
				this.SendPropertyChanged("Contact");
				this.OnContactChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComTel", DbType="NChar(15)")]
	public string ComTel
	{
		get
		{
			return this._ComTel;
		}
		set
		{
			if ((this._ComTel != value))
			{
				this.OnComTelChanging(value);
				this.SendPropertyChanging();
				this._ComTel = value;
				this.SendPropertyChanged("ComTel");
				this.OnComTelChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mobile", DbType="NChar(15)")]
	public string Mobile
	{
		get
		{
			return this._Mobile;
		}
		set
		{
			if ((this._Mobile != value))
			{
				this.OnMobileChanging(value);
				this.SendPropertyChanging();
				this._Mobile = value;
				this.SendPropertyChanged("Mobile");
				this.OnMobileChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(100)")]
	public string Address
	{
		get
		{
			return this._Address;
		}
		set
		{
			if ((this._Address != value))
			{
				this.OnAddressChanging(value);
				this.SendPropertyChanging();
				this._Address = value;
				this.SendPropertyChanged("Address");
				this.OnAddressChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WebUrl", DbType="NChar(100)")]
	public string WebUrl
	{
		get
		{
			return this._WebUrl;
		}
		set
		{
			if ((this._WebUrl != value))
			{
				this.OnWebUrlChanging(value);
				this.SendPropertyChanging();
				this._WebUrl = value;
				this.SendPropertyChanged("WebUrl");
				this.OnWebUrlChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Supplier_Product", Storage="_Product", ThisKey="SupplierUid", OtherKey="SupplierUid")]
	public EntitySet<Product> Product
	{
		get
		{
			return this._Product;
		}
		set
		{
			this._Product.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_Product(Product entity)
	{
		this.SendPropertyChanging();
		entity.Supplier = this;
	}
	
	private void detach_Product(Product entity)
	{
		this.SendPropertyChanging();
		entity.Supplier = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Manufacturer")]
public partial class Manufacturer : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _ManufacturerUid;
	
	private string _CName;
	
	private string _EName;
	
	private string _WebUrl;
	
	private string _Tel;
	
	private string _Fax;
	
	private string _Email;
	
	private string _Address;
	
	private EntitySet<Product> _Product;
	
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnManufacturerUidChanging(int value);
    partial void OnManufacturerUidChanged();
    partial void OnCNameChanging(string value);
    partial void OnCNameChanged();
    partial void OnENameChanging(string value);
    partial void OnENameChanged();
    partial void OnWebUrlChanging(string value);
    partial void OnWebUrlChanged();
    partial void OnTelChanging(string value);
    partial void OnTelChanged();
    partial void OnFaxChanging(string value);
    partial void OnFaxChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    #endregion
	
	public Manufacturer()
	{
		this._Product = new EntitySet<Product>(new Action<Product>(this.attach_Product), new Action<Product>(this.detach_Product));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManufacturerUid", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int ManufacturerUid
	{
		get
		{
			return this._ManufacturerUid;
		}
		set
		{
			if ((this._ManufacturerUid != value))
			{
				this.OnManufacturerUidChanging(value);
				this.SendPropertyChanging();
				this._ManufacturerUid = value;
				this.SendPropertyChanged("ManufacturerUid");
				this.OnManufacturerUidChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CName", DbType="NVarChar(50)")]
	public string CName
	{
		get
		{
			return this._CName;
		}
		set
		{
			if ((this._CName != value))
			{
				this.OnCNameChanging(value);
				this.SendPropertyChanging();
				this._CName = value;
				this.SendPropertyChanged("CName");
				this.OnCNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EName", DbType="NChar(30)")]
	public string EName
	{
		get
		{
			return this._EName;
		}
		set
		{
			if ((this._EName != value))
			{
				this.OnENameChanging(value);
				this.SendPropertyChanging();
				this._EName = value;
				this.SendPropertyChanged("EName");
				this.OnENameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WebUrl", DbType="NChar(100)")]
	public string WebUrl
	{
		get
		{
			return this._WebUrl;
		}
		set
		{
			if ((this._WebUrl != value))
			{
				this.OnWebUrlChanging(value);
				this.SendPropertyChanging();
				this._WebUrl = value;
				this.SendPropertyChanged("WebUrl");
				this.OnWebUrlChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tel", DbType="NChar(15)")]
	public string Tel
	{
		get
		{
			return this._Tel;
		}
		set
		{
			if ((this._Tel != value))
			{
				this.OnTelChanging(value);
				this.SendPropertyChanging();
				this._Tel = value;
				this.SendPropertyChanged("Tel");
				this.OnTelChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fax", DbType="NChar(15)")]
	public string Fax
	{
		get
		{
			return this._Fax;
		}
		set
		{
			if ((this._Fax != value))
			{
				this.OnFaxChanging(value);
				this.SendPropertyChanging();
				this._Fax = value;
				this.SendPropertyChanged("Fax");
				this.OnFaxChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NChar(30)")]
	public string Email
	{
		get
		{
			return this._Email;
		}
		set
		{
			if ((this._Email != value))
			{
				this.OnEmailChanging(value);
				this.SendPropertyChanging();
				this._Email = value;
				this.SendPropertyChanged("Email");
				this.OnEmailChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(50)")]
	public string Address
	{
		get
		{
			return this._Address;
		}
		set
		{
			if ((this._Address != value))
			{
				this.OnAddressChanging(value);
				this.SendPropertyChanging();
				this._Address = value;
				this.SendPropertyChanged("Address");
				this.OnAddressChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Manufacturer_Product", Storage="_Product", ThisKey="ManufacturerUid", OtherKey="ManufacturerUid")]
	public EntitySet<Product> Product
	{
		get
		{
			return this._Product;
		}
		set
		{
			this._Product.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_Product(Product entity)
	{
		this.SendPropertyChanging();
		entity.Manufacturer = this;
	}
	
	private void detach_Product(Product entity)
	{
		this.SendPropertyChanging();
		entity.Manufacturer = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Product")]
public partial class Product : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _ProductUid;
	
	private string _Type;
	
	private System.Nullable<int> _ManufacturerUid;
	
	private string _Name;
	
	private string _Description;
	
	private System.Nullable<System.DateTime> _PurchaseDate;
	
	private System.Nullable<int> _Valid;
	
	private System.Nullable<int> _Price;
	
	private string _Memo1;
	
	private string _Memo2;
	
	private string _GetSource;
	
	private string _BudgetarySource;
	
	private System.Nullable<System.DateTime> _GetDate;
	
	private string _Property;
	
	private string _ImgUrl;
	
	private string _WebUrl;
	
	private string _Detail;
	
	private System.Nullable<int> _SupplierUid;
	
	private EntitySet<Device> _Device;
	
	private EntityRef<Manufacturer> _Manufacturer;
	
	private EntityRef<Supplier> _Supplier;
	
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProductUidChanging(int value);
    partial void OnProductUidChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    partial void OnManufacturerUidChanging(System.Nullable<int> value);
    partial void OnManufacturerUidChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnPurchaseDateChanging(System.Nullable<System.DateTime> value);
    partial void OnPurchaseDateChanged();
    partial void OnValidChanging(System.Nullable<int> value);
    partial void OnValidChanged();
    partial void OnPriceChanging(System.Nullable<int> value);
    partial void OnPriceChanged();
    partial void OnMemo1Changing(string value);
    partial void OnMemo1Changed();
    partial void OnMemo2Changing(string value);
    partial void OnMemo2Changed();
    partial void OnGetSourceChanging(string value);
    partial void OnGetSourceChanged();
    partial void OnBudgetarySourceChanging(string value);
    partial void OnBudgetarySourceChanged();
    partial void OnGetDateChanging(System.Nullable<System.DateTime> value);
    partial void OnGetDateChanged();
    partial void OnPropertyChanging(string value);
    partial void OnPropertyChanged();
    partial void OnImgUrlChanging(string value);
    partial void OnImgUrlChanged();
    partial void OnWebUrlChanging(string value);
    partial void OnWebUrlChanged();
    partial void OnDetailChanging(string value);
    partial void OnDetailChanged();
    partial void OnSupplierUidChanging(System.Nullable<int> value);
    partial void OnSupplierUidChanged();
    #endregion
	
	public Product()
	{
		this._Device = new EntitySet<Device>(new Action<Device>(this.attach_Device), new Action<Device>(this.detach_Device));
		this._Manufacturer = default(EntityRef<Manufacturer>);
		this._Supplier = default(EntityRef<Supplier>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductUid", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int ProductUid
	{
		get
		{
			return this._ProductUid;
		}
		set
		{
			if ((this._ProductUid != value))
			{
				this.OnProductUidChanging(value);
				this.SendPropertyChanging();
				this._ProductUid = value;
				this.SendPropertyChanged("ProductUid");
				this.OnProductUidChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="NChar(3)")]
	public string Type
	{
		get
		{
			return this._Type;
		}
		set
		{
			if ((this._Type != value))
			{
				this.OnTypeChanging(value);
				this.SendPropertyChanging();
				this._Type = value;
				this.SendPropertyChanged("Type");
				this.OnTypeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManufacturerUid", DbType="Int")]
	public System.Nullable<int> ManufacturerUid
	{
		get
		{
			return this._ManufacturerUid;
		}
		set
		{
			if ((this._ManufacturerUid != value))
			{
				if (this._Manufacturer.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnManufacturerUidChanging(value);
				this.SendPropertyChanging();
				this._ManufacturerUid = value;
				this.SendPropertyChanged("ManufacturerUid");
				this.OnManufacturerUidChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50)")]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this.OnNameChanging(value);
				this.SendPropertyChanging();
				this._Name = value;
				this.SendPropertyChanged("Name");
				this.OnNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(50)")]
	public string Description
	{
		get
		{
			return this._Description;
		}
		set
		{
			if ((this._Description != value))
			{
				this.OnDescriptionChanging(value);
				this.SendPropertyChanging();
				this._Description = value;
				this.SendPropertyChanged("Description");
				this.OnDescriptionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PurchaseDate", DbType="SmallDateTime")]
	public System.Nullable<System.DateTime> PurchaseDate
	{
		get
		{
			return this._PurchaseDate;
		}
		set
		{
			if ((this._PurchaseDate != value))
			{
				this.OnPurchaseDateChanging(value);
				this.SendPropertyChanging();
				this._PurchaseDate = value;
				this.SendPropertyChanged("PurchaseDate");
				this.OnPurchaseDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Valid", DbType="Int")]
	public System.Nullable<int> Valid
	{
		get
		{
			return this._Valid;
		}
		set
		{
			if ((this._Valid != value))
			{
				this.OnValidChanging(value);
				this.SendPropertyChanging();
				this._Valid = value;
				this.SendPropertyChanged("Valid");
				this.OnValidChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Int")]
	public System.Nullable<int> Price
	{
		get
		{
			return this._Price;
		}
		set
		{
			if ((this._Price != value))
			{
				this.OnPriceChanging(value);
				this.SendPropertyChanging();
				this._Price = value;
				this.SendPropertyChanged("Price");
				this.OnPriceChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Memo1", DbType="NText", UpdateCheck=UpdateCheck.Never)]
	public string Memo1
	{
		get
		{
			return this._Memo1;
		}
		set
		{
			if ((this._Memo1 != value))
			{
				this.OnMemo1Changing(value);
				this.SendPropertyChanging();
				this._Memo1 = value;
				this.SendPropertyChanged("Memo1");
				this.OnMemo1Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Memo2", DbType="NText", UpdateCheck=UpdateCheck.Never)]
	public string Memo2
	{
		get
		{
			return this._Memo2;
		}
		set
		{
			if ((this._Memo2 != value))
			{
				this.OnMemo2Changing(value);
				this.SendPropertyChanging();
				this._Memo2 = value;
				this.SendPropertyChanged("Memo2");
				this.OnMemo2Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GetSource", DbType="NChar(10)")]
	public string GetSource
	{
		get
		{
			return this._GetSource;
		}
		set
		{
			if ((this._GetSource != value))
			{
				this.OnGetSourceChanging(value);
				this.SendPropertyChanging();
				this._GetSource = value;
				this.SendPropertyChanged("GetSource");
				this.OnGetSourceChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BudgetarySource", DbType="NChar(10)")]
	public string BudgetarySource
	{
		get
		{
			return this._BudgetarySource;
		}
		set
		{
			if ((this._BudgetarySource != value))
			{
				this.OnBudgetarySourceChanging(value);
				this.SendPropertyChanging();
				this._BudgetarySource = value;
				this.SendPropertyChanged("BudgetarySource");
				this.OnBudgetarySourceChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GetDate", DbType="SmallDateTime")]
	public System.Nullable<System.DateTime> GetDate
	{
		get
		{
			return this._GetDate;
		}
		set
		{
			if ((this._GetDate != value))
			{
				this.OnGetDateChanging(value);
				this.SendPropertyChanging();
				this._GetDate = value;
				this.SendPropertyChanged("GetDate");
				this.OnGetDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Property", DbType="NChar(2)")]
	public string Property
	{
		get
		{
			return this._Property;
		}
		set
		{
			if ((this._Property != value))
			{
				this.OnPropertyChanging(value);
				this.SendPropertyChanging();
				this._Property = value;
				this.SendPropertyChanged("Property");
				this.OnPropertyChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImgUrl", DbType="NChar(50)")]
	public string ImgUrl
	{
		get
		{
			return this._ImgUrl;
		}
		set
		{
			if ((this._ImgUrl != value))
			{
				this.OnImgUrlChanging(value);
				this.SendPropertyChanging();
				this._ImgUrl = value;
				this.SendPropertyChanged("ImgUrl");
				this.OnImgUrlChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WebUrl", DbType="NChar(150)")]
	public string WebUrl
	{
		get
		{
			return this._WebUrl;
		}
		set
		{
			if ((this._WebUrl != value))
			{
				this.OnWebUrlChanging(value);
				this.SendPropertyChanging();
				this._WebUrl = value;
				this.SendPropertyChanged("WebUrl");
				this.OnWebUrlChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Detail", DbType="NText", UpdateCheck=UpdateCheck.Never)]
	public string Detail
	{
		get
		{
			return this._Detail;
		}
		set
		{
			if ((this._Detail != value))
			{
				this.OnDetailChanging(value);
				this.SendPropertyChanging();
				this._Detail = value;
				this.SendPropertyChanged("Detail");
				this.OnDetailChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierUid", DbType="Int")]
	public System.Nullable<int> SupplierUid
	{
		get
		{
			return this._SupplierUid;
		}
		set
		{
			if ((this._SupplierUid != value))
			{
				if (this._Supplier.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnSupplierUidChanging(value);
				this.SendPropertyChanging();
				this._SupplierUid = value;
				this.SendPropertyChanged("SupplierUid");
				this.OnSupplierUidChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_Device", Storage="_Device", ThisKey="ProductUid", OtherKey="ProductUid")]
	public EntitySet<Device> Device
	{
		get
		{
			return this._Device;
		}
		set
		{
			this._Device.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Manufacturer_Product", Storage="_Manufacturer", ThisKey="ManufacturerUid", OtherKey="ManufacturerUid", IsForeignKey=true)]
	public Manufacturer Manufacturer
	{
		get
		{
			return this._Manufacturer.Entity;
		}
		set
		{
			Manufacturer previousValue = this._Manufacturer.Entity;
			if (((previousValue != value) 
						|| (this._Manufacturer.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Manufacturer.Entity = null;
					previousValue.Product.Remove(this);
				}
				this._Manufacturer.Entity = value;
				if ((value != null))
				{
					value.Product.Add(this);
					this._ManufacturerUid = value.ManufacturerUid;
				}
				else
				{
					this._ManufacturerUid = default(Nullable<int>);
				}
				this.SendPropertyChanged("Manufacturer");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Supplier_Product", Storage="_Supplier", ThisKey="SupplierUid", OtherKey="SupplierUid", IsForeignKey=true)]
	public Supplier Supplier
	{
		get
		{
			return this._Supplier.Entity;
		}
		set
		{
			Supplier previousValue = this._Supplier.Entity;
			if (((previousValue != value) 
						|| (this._Supplier.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Supplier.Entity = null;
					previousValue.Product.Remove(this);
				}
				this._Supplier.Entity = value;
				if ((value != null))
				{
					value.Product.Add(this);
					this._SupplierUid = value.SupplierUid;
				}
				else
				{
					this._SupplierUid = default(Nullable<int>);
				}
				this.SendPropertyChanged("Supplier");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_Device(Device entity)
	{
		this.SendPropertyChanging();
		entity.Product = this;
	}
	
	private void detach_Device(Device entity)
	{
		this.SendPropertyChanging();
		entity.Product = null;
	}
}
#pragma warning restore 1591
